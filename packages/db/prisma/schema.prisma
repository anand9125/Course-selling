generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // Change to your DB provider
  url      = env("DATABASE_URL")
}

model User {
  id               String         @id @default(cuid())
  name             String
  email            String         @unique
  password         String
  isInCollege      Boolean
  college          String?
  branch           String?
  year             Int?
  walletBalance    Float          @default(0.0)
  referralCode     String         @unique @default(uuid())
  referredById     String?
  referredBy       User?          @relation("UserReferrals", fields: [referredById], references: [id]) //Tracks who referred them (referredBy field).
  referrals        User[]         @relation("UserReferrals") // Tracks who they referred (referrals field).उन्होंने किसे refer kara
  role             Role     @default(STUDENT)
  profileCompleted Boolean        @default(false)
  purchases        Purchase[]
  reviews          Review[] // Added opposite relation
  userCategories   UserCategory[]
}

model UserCategory {
  id         String   @id @default(cuid())
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId String
}

// Many to many realtion 
// Each User can be part of multiple categories.
// Each Category can have multiple users.
model Category {
  id             String         @id @default(cuid())
  categoryId     String         @unique
  name           String         
  mentors        Mentor[]
  userCategories UserCategory[]
  courses Course[] // One category has many courses
}

model Mentor {
  id              String            @id @default(cuid())
  mentorId        String            @unique
  name            String
  image           String
  categoryId      String
  category        Category          @relation(fields: [categoryId], references: [id])
  courses         Course[]
  rating          Float             @default(0.0)

}

model Course {
  id          String     @id @default(cuid())
  image       String
  courseId    String     @unique
  title       String
  description String
  price       Float
  actualPrice Float
  mentorId    String
  mentor      Mentor     @relation(fields: [mentorId], references: [id])
  purchases   Purchase[]
  reviews     Review[]
  categoryId  String
  category    Category @relation(fields: [categoryId], references: [id])
}

model Purchase {
  id          String   @id @default(cuid())
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  course      Course   @relation(fields: [courseId], references: [id])
  courseId    String
  purchasedAt DateTime @default(now())
}

model Review {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  course    Course   @relation(fields: [courseId], references: [id])
  courseId  String
  rating    Int      @default(5)
  comment   String?
  createdAt DateTime @default(now())
}

enum Role {
  STUDENT
  ADMIN
}
